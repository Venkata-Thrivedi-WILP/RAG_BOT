# Overview
The **Set Policy** endpoint allows users to add or update policy details within the system. It replaces the previous **SavePolicyBlock2** endpoint and introduces a "revision stamp" feature to prevent data loss when multiple users are editing policies simultaneously. This endpoint uses the **POST** method and is accessed at the path **/Policy/SavePolicyBlock3**. Security is managed through bearer token authentication.

# Key Search Terms
- Set Policy endpoint
- SavePolicyBlock3
- Policy Management API
- Update policy details
- Revision stamp functionality
- Bearer token authentication
- JSON request body
- Policy object structure
- API responses for policy updates
- Error handling in policy management

# Example User Questions
- How do I add a new policy using the API?
- What is the purpose of the revision stamp in policy updates?
- Can I update an existing policy with the Set Policy endpoint?
- What are the required fields for the policy request?
- How do I handle errors when saving a policy?
- What is the structure of the request body for the Set Policy endpoint?
- How do I authenticate my request to the Set Policy endpoint?
- What response can I expect after successfully updating a policy?
- Are there any constraints on the policy version number?
- What does the response look like if there is an error?

# Developer Notes
- **Required Parameters**: 
  - `policy` (object): Contains details of the policy being added or updated.
  - `plinks` (array): Represents the current plinks file.
  
- **Request Structure**:
  - Content Type: `application/json`
  - Required fields in the request body:
    - `policy`
    - `plinks`

- **Response Structure**:
  - Status Code: `200`
  - Response Content Type: `*/*`
  - Response includes:
    - `Result` (object): Standard JSON response, with error information on failure.
    - `Error` (object): Error message text on failure, may be null.

- **Error Handling**: Ensure to check the `Error` object in the response for any issues during the API call.

- **Security Considerations**: This endpoint requires bearer token authentication.

# Detailed Explanation of Available Data, Request and Response Parameters

## Request Parameters
- **policy** (object): JSON object containing the details of the policy.
  - **Newpolicy** (boolean): Indicates if this is a new policy (true) or an update (false).
  - **Version** (integer): Policy structure version number. Currently, it should be set to `1`.
  - **Path** (string): The path of the policy.
  - **RevStamp** (string): Revision stamp returned from the latest call to `getPolicyBlock`. This is required if `Newpolicy` is false.
  - **Description** (string): A description of the policy.

- **plinks** (array): Array of plink objects representing the current plinks file.

### Sample Request JSON
```json
{
  "policy": {
    "Newpolicy": false,
    "Version": 0,
    "Path": "string_value",
    "RevStamp": "string_value",
    "Description": "string_value"
  },
  "plinks": [
    {}
  ]
}
```

## Response Parameters
- **Result** (object): Contains the standard JSON response.
- **Error** (object): Contains error message text on failure, may be null.

### Sample Response JSON
```json
{
  "Result": {},
  "Error": {}
}
```

# Raw Endpoint Documentation (Formatted)
```
ENDPOINT: Set policy
PATH: /Policy/SavePolicyBlock3
METHOD: POST
TAGS: Policy Management
DESCRIPTION: Replaces and deprecates SavePolicyBlock2, by adding the "rev stamp" functionality that helps prevent change loss when policies are being edited by multiple users.
METADATA:
  * x-idap-anon: False
  * x-codegen-request-body-name: payload
REQUEST BODY: Required
  Content Type: application/json
  Schema Properties:
    * policy (object): JSON object containing the details of the policy being added or updated.
      Nested properties:
        * Newpolicy (boolean): boolean set to true if this is a new policy (add)
        * Version (integer): Policy structure version number. 1, at this time.
        * Path (string): path of the policy
        * RevStamp (string): Revision stamp returned from latest call to getPolicyBlock. This is required if Newpolicy is false.
        * Description (string): policy description
    * plinks (array): Array of plink objects representing the current plinks file.
      Array items:
    Required fields: policy, plinks
  Sample Request JSON:
  ```json
  {
  "policy": {
    "Newpolicy": false,
    "Version": 0,
    "Path": "string_value",
    "RevStamp": "string_value",
    "Description": "string_value"
  },
  "plinks": [
    {}
  ]
}
  ```
RESPONSES:
  Status Code: 200
  Description: API-Result
  Content Type: */*
  Response Schema: PolicySavePolicyBlock3
  Response Body Properties:
    * Result (object): Standard JSON response, with error information on failure.
    * Error (object): Error message text on failure, may be null
  Sample Response JSON:
  ```json
  {
  "Result": {},
  "Error": {}
}
  ```
SECURITY: bearerAuth
```