# Overview  
This API endpoint allows an admin user to delete applications from the admin portal. It uses the HTTP POST method and is accessed via the path `/SaasManage/DeleteApplication`. To use this endpoint, the user must provide a valid bearer token for authentication.

# Key Search Terms  
- Delete application API  
- Application management endpoint  
- Admin portal application deletion  
- POST /SaasManage/DeleteApplication  
- Bearer token authentication  
- JSON request body for application deletion  
- API response for application deletion  
- Error handling in application deletion  
- Required fields for delete application API  
- Application key deletion  

# Example User Questions  
- How can I delete an application from the admin portal?  
- What is the endpoint to remove an app added by an admin user?  
- What authentication is required to delete an application?  
- What does the response look like when I delete an application?  
- Are there any specific fields required in the request to delete an app?  
- What happens if I try to delete a portal type application?  
- How do I handle errors when deleting an application?  
- Can I delete multiple applications at once?  
- What is the structure of the request body for the delete application API?  
- What does a successful deletion response contain?  

# Developer Notes  
- **Required Parameters:**  
  - `_RowKey`: An array containing the application key(s) to be deleted.  
- **Request Structure:**  
  - Content Type: `application/json`  
  - Example Request JSON:  
    ```json
    {
      "_RowKey": [
        "string_value"
      ]
    }
    ```
- **Response Structure:**  
  - Status Code: `200`  
  - Response Content Type: `*/*`  
  - The response includes a `Result` object and an `Error` object if applicable.  
- **Error Handling:**  
  - If the application is of portal type, an error message will be returned indicating that it cannot be deleted.  
- **Security Considerations:**  
  - Requires bearer token authentication.

# Detailed Explanation of Available Data, Request and Response Parameters  
## Request Parameters  
- `_RowKey` (array):  
  - **Description:** Application key(s) to be deleted.  
  - **Type:** Array of strings.  
  - **Required:** Yes.  
  - **Example Value:**  
    ```json
    [
      "app_key_1",
      "app_key_2"
    ]
    ```

## Response Parameters  
- **Result (object):**  
  - **Description:** Contains the result of the deletion request.  
  - **Nested Properties:**  
    - `ErrorID` (string): ID of any error that occurred during execution.  
    - `ErrorCode` (string): Message describing the error.  
    - `Exception` (string): Any exception that occurred.  
    - `MessageID` (string): ID of the message.  
    - `Result` (object):  
      - **Description:** Contains the application key and success flag.  
      - **Nested Properties:**  
        - `_RowKey` (string): The application key that was attempted to be deleted.  
        - `success` (boolean): Indicates whether the application was successfully deleted.  
    - `InnerExceptions` (string): Any inner exceptions that occurred.  
    - `Message` (string): Message if any exception occurred.  
    - `success` (boolean): Overall success flag for the deletion.  
    - `IsSoftError` (string): Indicates if the error is soft.  
- **Error (object):**  
  - **Description:** Contains error information if the application is of portal type.  
  - **Nested Properties:**  
    - `ErrorMessage` (string): Message indicating that the application could not be deleted because it is a system application.  

# Raw Endpoint Documentation (Formatted)  
**ENDPOINT:** Delete application.  
**PATH:** /SaasManage/DeleteApplication  
**METHOD:** POST  
**TAGS:** Application Management  
**DESCRIPTION:** Use this API to delete apps added by admin user. The API gets invoked when the admin user wants to delete apps from admin portal.  
**METADATA:**  
  * x-idap-anon: False  
  * x-codegen-request-body-name: payload  
**REQUEST BODY:** Required  
  Content Type: application/json  
  Schema Properties:  
    * _RowKey (array): Application key.  
      Array items:  
    **Required fields:** _RowKey  
  **Sample Request JSON:**  
  ```json  
  {  
    "_RowKey": [  
      "string_value"  
    ]  
  }  
  ```  
**RESPONSES:**  
  Status Code: 200  
  Description: API-Result  
  Content Type: */*  
  Response Schema: SaasManageDeleteApplication  
  Response Body Properties:  
    * Result (object): The below response is received when request is successful.  
      Nested properties:  
        * ErrorID (string): Error Id of occured error during api execution.  
        * ErrorCode (string): Error message of Error occured.  
        * Exception (string): If any exception has occured.  
        * MessageID (string): Message id.  
        * Result (object): This gives array of application keys with success flag.  
          Nested properties:  
            * _RowKey (string): Application key.  
            * success (boolean): Whether the application is deleted or not.  
        * InnerExceptions (string): Inner Exception, if any, within exception.  
        * Message (string): Message if any exception.  
        * success (boolean): Whether the application is deleted or not.  
        * IsSoftError (string): Error type is soft or not.  
    * Error (object): This error message is displayed when the application is of portal type.  
      Nested properties:  
        * ErrorMessage (string): Application could not be deleted. Applications with type of Portal are system applications.  
  **Sample Response JSON:**  
  ```json  
  {  
    "Result": {  
      "ErrorID": "string_value",  
      "ErrorCode": "string_value",  
      "Exception": "string_value",  
      "MessageID": "string_value",  
      "Result": {  
        "_RowKey": "string_value",  
        "success": false  
      },  
      "InnerExceptions": "string_value",  
      "Message": "string_value",  
      "success": false,  
      "IsSoftError": "string_value"  
    },  
    "Error": {  
      "ErrorMessage": "string_value"  
    }  
  }  
  ```  
**SECURITY:** bearerAuth  