**Overview**
-----------

This API endpoint is used to update various fields related to an application. It also allows assigning roles for accessing the applications. Only system administrators and users with application management rights can invoke this API.

* HTTP Method: POST
* Path: `/SaasManage/UpdateApplicationDE`

Security requirements: bearerAuth

**Key Search Terms**
-------------------

* Update application
* Assign roles to application
* Application management
* SaasManage/UpdateApplicationDE
* Bearer authentication

**Example User Questions**
-------------------------

* What is the format of the request body for updating an application?
* How do I assign a role to an application using this API?
* What happens if I provide an invalid row key in the update application request?
* Can I use this API to update multiple fields related to an application at once?
* How do I handle errors and exceptions when calling this API?

**Developer Notes**
-------------------

### Required Fields

* `_RowKey`

### Request/Response Structure

* Request Body:
	+ `Content Type`: `application/json`
	+ `Schema Properties`:
		- `ShowRegistration` (boolean): Specifies whether to show registration link or not on the UI. By default it is false.
		- `_RowKey` (string): The name or Unique ID of the application created. Can fetch the AppKey from the CyberArk Admin Portal once we add an application. Can also fetch the RowKey using RedRock query.
		- `Handler` (string): The application handler is responsible for processing the request and generating a response. Ex: cloudlib Centrify.Saas.apphandlers.UserPass
		- `IconUri` (string): It is the absolute path of the Application icon.
		- `Script` (string): It is the script used to add complex logic for attribute mappings of SAML response. Applicable only for SAML web based application
		- `AppRoles` (object):
			- `Publish` (array): Array of Roles to be assigned for accessing the application.
			- `UnPublish` (array): Array of Roles to be un-assigned for accessing the application.
		- `SamlAttributes` (string): This attributes are applicable only to SAML web based application. By default it is null
		- `Description` (string): It is the description about the application added.
		- `Name` (string): It is the name of the Application.
* Response Body:
	+ `Result` (object):
		- `State` (integer): If State is '0' then application fields are updated as expected.
	+ `Error` (object):
		- `Invalid_RowKey`: This error message is displayed when the invalid rowkey is provided. Error message: 'The application does not exist or has been deleted.'

### Security Considerations

* bearerAuth

**Raw Endpoint Documentation (Formatted)**
-----------------------------------------

ENDPOINT: Update application.
PATH: /SaasManage/UpdateApplicationDE
METHOD: POST
TAGS: Application Management
DESCRIPTION: This API is invoked to update several fields related to an application and is also used to assign roles for accessing the applications. Only system administrator, users with application management rights can invoke this API. Refer guides section https://identity-developer.cyberark.com/docs/manage-access-to-applications-1#update-an-application
METADATA:
  * x-idap-anon: False
  * x-codegen-request-body-name: payload
REQUEST BODY: Required
  Content Type: application/json
  Schema Properties:
    * ShowRegistration (boolean): It specifies whether to show registration link or not on the UI. By default it is false.
    * _RowKey (string): It is the name or Unique ID of the application created. It is also known as App key. Can fetch the AppKey from the CyberArk Admin Portal once we add an application. Can also fetch the RowKey using RedRock query. Note: RowKey can be name or App key of the application but cannot be Application Id value for applications like OAuth or OIDC. Ex: 52d1cec-63b7-4415-b4e0-facacb555d4e
    * Handler (string): The application handler is responsible for processing the request and generating a response. Ex: cloudlib Centrify.Saas.apphandlers.UserPass
    * IconUri (string): It is the absolute path of the Application icon.
    * Script (string): It is the script used to add complex logic for attribute mappings of SAML response. Applicable only for SAML web based application
    * AppRoles (object): It is used to assign or un-assign roles for accessing the application.
      Nested properties:
        * Publish (array): Array of Roles to be assigned for accessing the application.
          Array items:
            * RoleType (string): It is the type of role. Ex: PrincipalList
            * Role (string): It is the Unique Id of the role. Role name, id and type information can be fetched from the RedRock query. Ex: 447acf32_5bb8_45d5_8649_4f31dd5d888e
            * ID (string): It is the Unique Id of the role. Role name, id and type information can be fetched from the RedRock query. Ex: 447acf32_5bb8_45d5_8649_4f31dd5d888e
            * Application (string): It is the name or Unique ID of the application created. It is also known as App key.
            * Automatic (boolean): Specifies whether the application has been set for automatic installation or not. By default it is true.
            * Name (string): It is the name of the Role which needs to be assigned to application.
        * UnPublish (array): Array of Roles to be un-assigned for accessing the application.
          Array items:
            * RoleType (string): It is the type of role.
            * Role (string): It is the Unique Id of the role. Role name, id and type information can be fetched from the RedRock query.
            * ID (string): It is the Unique Id of the role. Role name, id and type information can be fetched from the RedRock query.
            * Application (string): It is the name or Unique ID of the application created. It is also known as App key.
            * Automatic (boolean): Automatic
            * Name (string): It is the name of the Role which needs to be un-assigned to application.
    * SamlAttributes (string): This attributes are applicable only to SAML web based application. By default it is null
    * Description (string): It is the description about the application added.
    * Name (string): It is the name of the Application.
  Sample Request JSON:
  ```json
  {
  "ShowRegistration": false,
  "_RowKey": "string_value",
  "Handler": "string_value",
  "IconUri": "string_value",
  "Script": "string_value",
  "AppRoles": {
    "Publish": [
      {
        "RoleType": "string_value",
        "Role": "string_value",
        "ID": "string_value",
        "Application": "string_value",
        "Automatic": false,
        "Name": "string_value"
      }
    ],
    "UnPublish": [
      {
        "RoleType": "string_value",
        "Role": "string_value",
        "ID": "string_value",
        "Application": "string_value",
        "Automatic": false,
        "Name": "string_value"
      }
    ]
  },
  "SamlAttributes": "string_value",
  "Description": "string_value",
  "Name": "string_value"
}
  ```
RESPONSES:
  Status Code: 200
  Description: API-Result
  Content Type: */*
  Response Schema: SaasManageUpdateApplicationDE
  Response Body Properties:
    * Result (object): Return object for a successful API call.
      Nested properties:
        * ErrorID (string): Error ID if any error is received from the API. By default it is 'null'
        * ErrorCode (string): Error code if any error is received from the API. By default it is 'null'
        * Exception (string): Exception message if any exception is received from the API. By default it is 'null'
        * MessageID (string): Message Id for failure response. By default it is 'null'
        * Result (object): Result for the update application request.
          Nested properties:
            * State (integer): If State is '0' then application fields are updated as expected.
        * InnerExceptions (string): InnerExceptions
        * Message (string): Error message for failure response. By default it is 'null'
        * success (boolean): The success will be true or false.
        * IsSoftError (boolean): SoftError if true indicates this is not actually an exception but an UI warning popup.
    * Error (object): Error message text on failure.
      Nested properties:
        * Invalid_RowKey (string): This error message is displayed when the invalid rowkey is provided. Error message: 'The application does not exist or has been deleted.'

SECURITY: bearerAuth