# Overview  
The **Create User** endpoint allows system administrators or users with user management rights to create a new user in the system. This is done via a POST request to the path `/CDirectoryService/CreateUser`. The endpoint requires bearer authentication for security. When creating a user, you have the option to specify various roles and settings, such as sending SMS or email invites, and enforcing password policies.

# Key Search Terms  
- Create user API  
- User management endpoint  
- POST /CDirectoryService/CreateUser  
- Bearer authentication  
- User roles and permissions  
- SMS and email invites for users  
- User creation parameters  
- API response for user creation  
- Error handling in user creation  

# Example User Questions  
- How do I create a new user using the API?  
- What roles can I assign when creating a user?  
- Is it possible to send an SMS invite to a new user?  
- What are the required fields for the Create User API?  
- How do I handle errors when creating a user?  
- Can I create a user without specifying a username?  
- What happens if the username I provide is already taken?  
- How do I enforce email verification for a new user?  
- What is the maximum length for the password when creating a user?  
- How do I specify the organization path for a new user?  

# Developer Notes  
- **Required Parameters:**  
  - `Name` (string): Username of the user.  
  - `Mail` (string): Email address of the user.  

- **Request Structure:**  
  - The request body must be in JSON format and include the required fields along with optional fields as necessary.  

- **Response Structure:**  
  - A successful response will return a status code of 200 with a JSON body containing the result of the operation.  

- **Error Handling:**  
  - The API provides specific error messages for common issues, such as username availability and missing parameters.  

- **Security Considerations:**  
  - The endpoint requires bearer authentication. Ensure that the calling user has the necessary permissions to create users.  

# Detailed Explanation of Available Data, Request and Response Parameters  

## Request Parameters  
- **InEverybodyRole** (boolean): Place user in Everybody role (default=true)  
- **SendSmsInvite** (boolean): Send user an SMS invite to enroll their mobile device in the portal (default=false)  
- **InSysAdminRole** (boolean): Place user in System Administrator role (default=false)  
- **Description** (string): Description of user (default=null)  
- **Name** (string): Username of the user. Format: `username@suffix` if suffix is required, else just `username`. Optional only if `PrimaryIdentifier` is provided. Example: `mark@aak7163`  
- **MobileNumber** (string): User's mobile number (required if `SendSmsInvite` is true, default=null)  
- **useAlternateMfaAccount** (boolean): Does the user have an alternate MFA Account?  
- **OrgPath** (string): The organization name to which the user is added  
- **Password** (string): Strong password of the user that meets complexity requirements (default=randomly generated strong password). Must be 8-64 characters, contain at least one digit, one upper case and one lower case letter.  
- **CmaRedirectedUserUuid** (string): Unique ID of the redirected user.  
- **ServiceUser** (boolean): User is a service user (default=false)  
- **OfficeNumber** (string): User's office number (default=null)  
- **ReportsTo** (string): UUID of the user this user reports to (default=null)  
- **SendEmailInvite** (boolean): Send user an email invite to login to the portal (default=true)  
- **HomeNumber** (string): User's home number (default=null)  
- **DisplayName** (string): Display name of user (default=null)  
- **PrimaryIdentifier** (string): Identifier Type used while login  
- **VerifyEmail** (boolean): Enforce user to verify the registered email address  
- **ForcePasswordChangeNext** (boolean): Force password change at first login (default=true)  
- **PasswordNeverExpire** (boolean): User's password never expires (default=false)  
- **Mail** (string): Email address of user; required if `SendEmailInvite` or `VerifyEmail` is true. Example: `mark@yahoo.com`  

## Response Parameters  
- **Status Code:** 200  
- **Response Body Properties:**  
  - **Result (object):** Return object for a successful API call.  
    - **ErrorID (string):** Error ID if any error is received from the API (default=null)  
    - **ErrorCode (string):** Error code if any error is received from the API (default=null)  
    - **Exception (string):** Exception message if any exception is received from the API (default=null)  
    - **MessageID (string):** Message ID for failure response (default=null)  
    - **Result (string):** Unique ID of the created user.  
    - **InnerExceptions (string):** Inner Exceptions if any received from the API (default=null)  
    - **Message (string):** Error message for failure response (default=null)  
    - **success (boolean):** True for a successful API call.  
    - **IsSoftError (boolean):** Indicates if this is not an actual exception but a UI warning popup.  
  - **Error (object):** Error message text on failure.  
    - **UsernameNotAvailable (string):** Error when the username is already present. Default message: "User name user@aak7736 is already in use. Please contact your IT helpdesk."  
    - **MissingParameter (string):** Error when the parameter mail id is not passed. Default message: "Parameter 'Mail' must be specified."  
    - **InvalidUsername (string):** Error when the username is not in correct format. Default message: "User name is invalid; user names must be of the form 'name@suffix', not contain restricted characters, and suffix must match an existing User Service suffix."  

# Raw Endpoint Documentation (Formatted)  
```
ENDPOINT: Create user  
PATH: /CDirectoryService/CreateUser  
METHOD: POST  
TAGS: Create Users  
DESCRIPTION: Invoke this API to create a new user. Only system administrator or users with user management rights can invoke this API. Specifying 'ServiceUser' will override the 'InEveryBodyRole' property if both are provided. Refer guides section Create a User  
METADATA:  
  * x-idap-anon: False  
  * x-codegen-request-body-name: payload  
REQUEST BODY: Required  
  Content Type: application/json  
  Schema Properties:  
    * InEverybodyRole (boolean): Place user in Everybody role (default=true)  
    * SendSmsInvite (boolean): Send user an sms invite to enroll their mobile device in the protal (default=false)  
    * InSysAdminRole (boolean): Place user in System Adminstrator role (default=false)  
    * Description (string): Description of user (default=null)  
    * Name (string): Username of the user. The username can be 'username@suffix if suffix is required, else 'username'. The username can be optional only when Primary Identifier is provided. Ex: mark@aak7163  
    * MobileNumber (string): User's mobile number (default=null); note this field is required if SendSmsInvite is true  
    * useAlternateMfaAccount (boolean): Does the user have an alternate MFA Account?  
    * OrgPath (string): The organisation name to which the user is added  
    * Password (string): Strong password of the user that meets the complexity requirements. Password must be at least 8 characters long, not be longer than 64 characters, contain at least one digit, contain at least one upper and one lower case letter. (default=randomly generated strong password)  
    * CmaRedirectedUserUuid (string): Unique id of the redirected user.  
    * ServiceUser (boolean): User is a service user (default=false)  
    * OfficeNumber (string): User's office number (default=null)  
    * ReportsTo (string): Uuid of user this user reports to (default=null)  
    * SendEmailInvite (boolean): Send user an email invite to login to the portal. (default=true)  
    * HomeNumber (string): User's home number (default=null)  
    * DisplayName (string): Display name of user (default=null)  
    * PrimaryIdentifier (string): Identifier Type used while login  
    * VerifyEmail (boolean): Enforce user to verify the registered email address  
    * ForcePasswordChangeNext (boolean): Force password change at first login (default=true)  
    * PasswordNeverExpire (boolean): User's password never expires (default=false)  
    * Mail (string): Email address of user; Note this field is required if 'SendEmailInvite' is true, or 'VerifyEmail' is true. Ex: mark@yahoo.com  
    Required fields: Name, Mail  
  Sample Request JSON:  
  ```json  
  {  
    "InEverybodyRole": false,  
    "SendSmsInvite": false,  
    "InSysAdminRole": false,  
    "Description": "string_value",  
    "Name": "string_value",  
    "MobileNumber": "string_value",  
    "useAlternateMfaAccount": false,  
    "OrgPath": "string_value",  
    "Password": "string_value",  
    "CmaRedirectedUserUuid": "string_value",  
    "ServiceUser": false,  
    "OfficeNumber": "string_value",  
    "ReportsTo": "string_value",  
    "SendEmailInvite": false,  
    "HomeNumber": "string_value",  
    "DisplayName": "string_value",  
    "PrimaryIdentifier": "string_value",  
    "VerifyEmail": false,  
    "ForcePasswordChangeNext": false,  
    "PasswordNeverExpire": false,  
    "Mail": "string_value"  
  }  
  ```  
RESPONSES:  
  Status Code: 200  
  Description: API-Result  
  Content Type: */*  
  Response Schema: CDirectoryServiceCreateUser  
  Response Body Properties:  
    * Result (object): Return object for a successful API call.  
      Nested properties:  
        * ErrorID (string): Error ID if any error is received from the API. By default it is 'null'  
        * ErrorCode (string): Error code if any error is received from the API. By default it is 'null'  
        * Exception (string): Exception message if any exception is received from the API. By default it is 'null'  
        * MessageID (string): Message Id for failure response. By default it is 'null'  
        * Result (string): Unique Id of the created user.  
        * InnerExceptions (string): Inner Exceptions if any received from the API. By default it is 'null'  
        * Message (string): Error message for failure response. By default it is 'null'  
        * success (boolean): It will be true for a successful API call.  
        * IsSoftError (boolean): SoftError if true indicates this is not actually an exception but an UI warning popup.  
    * Error (object): Error message text on failure.  
      Nested properties:  
        * UsernameNotAvailable (string): This error occurs when the given username is already present. By default, the below error message will be displayed: User name user@aak7736 is already in use. Please contact your IT helpdesk.  
        * MissingParameter (string): This error occurs when the parameter mail id is not passed. By default, the below error message will be displayed: Parameter 'Mail' must be specified.  
        * InvalidUsername (string): This error occurs when the given username is not in correct format. By default, the below error message will be displayed: User name is invalid; user names must be of the form 'name@suffix', not contain restricted characters, and suffix must match an existing User Service suffix..  
  Sample Response JSON:  
  ```json  
  {  
    "Result": {  
      "ErrorID": "string_value",  
      "ErrorCode": "string_value",  
      "Exception": "string_value",  
      "MessageID": "string_value",  
      "Result": "string_value",  
      "InnerExceptions": "string_value",  
      "Message": "string_value",  
      "success": false,  
      "IsSoftError": false  
    },  
    "Error": {  
      "UsernameNotAvailable": "string_value",  
      "MissingParameter": "string_value",  
      "InvalidUsername": "string_value"  
    }  
  }  
  ```  
SECURITY: bearerAuth  
```  