# Overview
This API endpoint, accessed via a POST request at `/ExtData/GetColumns`, is designed to retrieve a list of current attributes and their values for a specific CyberArk Identity user. It can only be invoked by system administrators, users with user management rights, or the user themselves. When called, the API returns all extensible attributes set for the specified user, along with their respective values. If the request includes the parameter `IncludeNulls`, unset attributes (i.e., those with null values) will also be returned. 

**Security Requirement:** This endpoint requires bearer token authentication.

# Key Search Terms
- CyberArk Identity attributes
- Get user attributes API
- Manage user attributes
- Extensible attributes CyberArk
- API for user management
- Retrieve user data CyberArk
- Include null values in API response
- CyberArk API documentation
- User attribute retrieval

# Example User Questions
- How can I retrieve the attributes for a specific user in CyberArk?
- What API do I use to get user attributes including null values?
- Can I fetch all extensible attributes for a user in CyberArk Identity?
- What permissions are required to access user attributes in CyberArk?
- How do I handle errors when calling the GetColumns API?
- What is the structure of the request body for fetching user attributes?
- How can I check if a specific user has any attributes set?
- What should I do if I receive an error when fetching user attributes?
- How do I specify which table to fetch user attributes from in the API?
- What does the response look like when I successfully retrieve user attributes?

# Developer Notes
- **Required Parameters:**
  - `ID` (string): The ID of the user for whom to fetch the list of attributes.
  - `Table` (string): The name of the table from which to fetch the attributes.
  
- **Optional Parameters:**
  - `IncludeNulls` (boolean): Indicates whether to include columns with null values.

- **Request Structure:**
  - Content Type: `application/json`
  - Sample Request JSON:
    ```json
    {
      "ID": "string_value",
      "IncludeNulls": false,
      "Table": "string_value"
    }
    ```

- **Response Structure:**
  - Status Code: 200
  - Content Type: `*/*`
  - Response includes a `Result` object with success status and error details if applicable.

- **Error Handling:**
  - The response will include an `Error` object with specific messages for invalid table names or empty IDs.

# Detailed Explanation of Available Data, Request and Response Parameters
## Request Parameters
- **ID** (string): 
  - Description: The unique identifier of the user whose attributes are being requested.
  - Example: `"ID": "user123"`
  
- **IncludeNulls** (boolean): 
  - Description: A flag to indicate whether to include attributes with null values in the response.
  - Example: `"IncludeNulls": false`
  
- **Table** (string): 
  - Description: The name of the table from which the attributes should be fetched.
  - Example: `"Table": "UserAttributes"`

## Response Parameters
- **Result** (object): 
  - Description: Contains the results of a successful API call.
  - Properties:
    - **ErrorID** (string): Error ID if any error occurs. Default is 'null'.
    - **ErrorCode** (string): Error code if any error occurs. Default is 'null'.
    - **Exception** (string): Exception message if an exception occurs. Default is 'null'.
    - **MessageID** (string): Message ID for failure response. Default is 'null'.
    - **Result** (object): The values of the extended columns.
      - **ColumnName** (string): The value of the column.
    - **InnerExceptions** (string): Inner exceptions if any occur. Default is 'null'.
    - **Message** (string): Error message for failure response. Default is 'null'.
    - **success** (boolean): Indicates if the API call was successful.
    - **IsSoftError** (boolean): Indicates if this is a UI warning (not an exception).
  
- **Error** (object): 
  - Description: Contains error messages for failure cases.
  - Properties:
    - **InvalidTableName** (string): Message if an invalid table is provided.
    - **EmptyID** (string): Message if the ID is invalid or empty.
    - **EmptyTableName** (string): Message if the table name is empty or null.

## Sample Response JSON
```json
{
  "Result": {
    "ErrorID": "string_value",
    "ErrorCode": "string_value",
    "Exception": "string_value",
    "MessageID": "string_value",
    "Result": {
      "ColumnName": "string_value"
    },
    "InnerExceptions": "string_value",
    "Message": "string_value",
    "success": false,
    "IsSoftError": false
  },
  "Error": {
    "InvalidTableName": "string_value",
    "EmptyID": "string_value",
    "EmptyTableName": "string_value"
  }
}
```

# Raw Endpoint Documentation (Formatted)
```
ENDPOINT: Get additional attributes
PATH: /ExtData/GetColumns
METHOD: POST
TAGS: Manage User Attributes
DESCRIPTION: This API is used to get the list of all the current attributes and their values for a CyberArk Identity user. Only system administrators, users with user management rights, or the user itself can invoke this API. When this API is invoked for a user, the list of all extensible attributes set for that particular user with their respective values is returned. Extended unset attributes (i.e., null values) for the user in this request are not returned in the response unless specified in the API request using parameter 'IncludeNulls'. For more details, please refer to Use extensible attributes.
METADATA:
  * x-idap-anon: False
  * x-codegen-request-body-name: payload
REQUEST BODY: Required
  Content Type: application/json
  Schema Properties:
    * ID (string): ID of the user to fetch list of attributes
    * IncludeNulls (boolean): Include columns with null values or not
    * Table (string): Name of the table to fetch the attributes from
    Required fields: ID, Table
  Sample Request JSON:
  ```json
  {
  "ID": "string_value",
  "IncludeNulls": false,
  "Table": "string_value"
}
  ```
RESPONSES:
  Status Code: 200
  Description: API-Result
  Content Type: */*
  Response Schema: ExtDataGetColumns
  Response Body Properties:
    * Result (object): Return object for a successful API call
      Nested properties:
        * ErrorID (string): Error ID if any error is received from the API. By default, it is 'null'
        * ErrorCode (string): Error code if any error is received from the API. By default, it is 'null'
        * Exception (string): Exception message if an exception is received from the API. By default, it is 'null'
        * MessageID (string): Message Id for failure response. By default it is 'null'
        * Result (object): The values of the extended columns as an object
          Nested properties:
            * ColumnName (string): The value of the column
        * InnerExceptions (string): Inner Exceptions if any received from the API. By default, it is 'null'
        * Message (string): Error message for failure response. By default it is 'null'
        * success (boolean): It will be true for a successful API call
        * IsSoftError (boolean): SoftError if true indicates this is not an exception but a UI warning popup
    * Error (object): Error message text on failure and below message would be returned if provided table is invalid/empty, or user id is empty
      Nested properties:
        * InvalidTableName (string): If Invalid Table is provided, User will see the following message 'The requested data or its dependent data was not found in the service.'
        * EmptyID (string): When Invalid/Empty ID is provided, you would see this message 'Parameter 'ID' must be specified.'
        * EmptyTableName (string): When provided Table is empty or null, you would see this message 'Parameter 'Table' must be specified.'
  Sample Response JSON:
  ```json
  {
  "Result": {
    "ErrorID": "string_value",
    "ErrorCode": "string_value",
    "Exception": "string_value",
    "MessageID": "string_value",
    "Result": {
      "ColumnName": "string_value"
    },
    "InnerExceptions": "string_value",
    "Message": "string_value",
    "success": false,
    "IsSoftError": false
  },
  "Error": {
    "InvalidTableName": "string_value",
    "EmptyID": "string_value",
    "EmptyTableName": "string_value"
  }
}
  ```
SECURITY: bearerAuth
```