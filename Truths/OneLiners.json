{
    "ApplicationManagement": [
        "POST /SaasManage/GetTemplatesAndCategories: Retrieve application templates and categories",
        "POST /SaasManage/IsApplicationAvailableInCatalog: Check if an application is still available in the catalog",
        "POST /SaasManage/ImportAppFromTemplate: Create application instances from predefined templates",
        "POST /SaasManage/DeleteApplication: Delete applications added by admin users",
        "POST /SaasManage/GetApplication: Retrieve metadata information for a specific application",
        "POST /SaasManage/CloneAnApplication: Create a copy of an existing application",
        "POST /SaasManage/GetAppIDByServiceName: Get an application's ID from its service name",
        "POST /SaasManage/SetApplicationPermissions: Set permissions for a particular application",
        "POST /SaasManage/GetOpenIdClientSecret: Retrieve client secret for an OIDC web application",
        "POST /SaasManage/UpdateApplicationDE: Update application fields and assign roles for access",
        "POST /UPRest/CreateTagWithNoApp: Create a tag with no applications for the current user",
        "POST /UPRest/DeleteTag: Delete a tag",
        "POST /UPRest/DownloadImportAccountsLogFile: Download logs for imported accounts file",
        "POST /UPRest/GetAppByKey: Retrieve an application's data by key",
        "POST /UPRest/GetCredentialsProviderListForImport: Get list of credential providers",
        "POST /UPRest/GetRecentImportedAccountsFile: Get details for recently uploaded files",
        "POST /UPRest/GetResultantAppsForUser: Retrieve applications a user has access to",
        "POST /UPRest/GetTagsForApp: Get tags applied to an application",
        "POST /UPRest/RenameTag: Rename a tag",
        "POST /UPRest/SetUserCredsForApp: Set user credentials for an application",
        "POST /UPRest/UpdateCapturedUserApplication: Update a captured user application",
        "POST /UPRest/UpdateCredsForSecuredItem: Update secured item credentials",
        "POST /UPRest/UpdatePersonalApplication: Update a personal user application",
        "POST /UPRest/UpdateUserApplication: Update user application for the current user",
        "POST /UPRest/UploadPersonalAppIcon: Upload an icon for a personal application",
        "POST /UPRest/UploadSecuredItemIcon: Upload an icon for a secured item",
        "POST /UPRest/UpsertTagsForApp: Add and update application tags for the current user",
        "POST /UPRest/UpsertTagsForSecuredItem: Add and update secured item tags for the current user",
        "POST /UPRest/GetUPData: Retrieve all available data for the user portal in one call",
        "POST /UPRest/ValidateUsernameIsAllowed: Verify if username is allowed for personal app or secured item",
        "POST /UPRest/GetTotpCodesForSecuredPassword: Get TOTP verification codes for a secured password",
        "POST /UPRest/SaveTotpSeedForSecuredPassword: Set TOTP seed for a secured password",
        "POST /UPRest/UpRestSaveFilesForSecuredItem: Add, update, or delete files for a secured item",
        "POST /UPRest/GetSecureFiles: Get list of secured files attached to a secured item",
        "POST /UPRest/UpRestGetConsumedStorageForSecuredItem: Get consumed storage space for the current user"
    ],
    "PolicyMangement": [
        "POST /AuthProfile/DeleteProfile: Delete authentication profile (requires UUID)",
        "POST /AuthProfile/GetProfile: Get authentication profile details using UUID",
        "POST /AuthProfile/SaveProfile: Create or update authentication profile",
        "POST /Policy/DeletePolicyBlock: Delete a policy block (requires path)",
        "POST /Policy/GetNicePlinks: Retrieve policy links in UI Query Response format",
        "POST /Policy/GetPasswordComplexityRequirements: Fetch password rules by user ID or name",
        "POST /AuthProfile/GetProfileMFAScoring: Get authentication assurance level for profile factors",
        "POST /Policy/GetPolicyBlock: Get a policy block by name",
        "POST /Policy/SavePolicyBlock3: Save or update a policy with"
    ],
    "UserManagement": [
        "POST /CDirectoryService/CreateUser: Create a new user in the cloud directory",
        "POST /CDirectoryService/GetUsersFromCsvFile: Start bulk user import by uploading a CSV file with user information",
        "POST /CDirectoryService/SubmitUploadedFile: Process previously uploaded CSV file to complete bulk user creation",
        "POST /UserMgmt/InviteUsers: Send invitations to users or groups to access the portal",
        "POST /UserMgmt/SendLoginEmails: Send invitation emails to specific users by UUID",
        "POST /UserMgmt/SendSmsInvite: Send an SMS invitation to a specific user",
        "POST /CDirectoryService/GetUser: Retrieve details of a specific cloud user by ID",
        "POST /UserMgmt/GetUserInfo: Get comprehensive user information including MFA setup status",
        "POST /CDirectoryService/GetUserByName: Retrieve user details using username",
        "POST /CDirectoryService/GetUsers: Get details of all users in the cloud directory",
        "POST /CDirectoryService/ChangeUser: Update base profile information for a specified user",
        "POST /User/UpdateProfile: Update a cloud user's profile properties and additional attributes",
        "POST /CDirectoryService/GetUserAttributes: Get attributes for a cloud user",
        "POST /UserMgmt/ChangeUserAttributes: Update attributes for an Active Directory user",
        "POST /Core/GetUserSettings: Retrieve specific settings for a user",
        "POST /UserMgmt/GetUsersRolesAndAdministrativeRights: Get roles and administrative rights for a user",
        "POST /CDirectoryService/SetUserPicture: Set or update a user's profile picture",
        "POST /UserMgmt/GetUserAttributes: Fetch attributes for a specified user based on directory service",
        "POST /ExtData/GetSchema: Get the schema structure for a specified table in the tenant's extended schema",
        "POST /ExtData/GetColumns: Retrieve list of extended attributes and values for a user",
        "POST /ExtData/SetColumns: Update extended attribute values for a user",
        "POST /ExtData/UpdateSchema: Add new or update existing attributes in the tenant schema",
        "POST /UserMgmt/RemoveUsers: Delete cloud users or remove users from other directory services",
        "POST /CDirectoryService/ChangeUserState: Change a user's state between active and disabled",
        "POST /CDirectoryService/SetUserState: Set a user's state to None, Locked, Disabled, or Expired",
        "POST /UserMgmt/IsUserCloudLocked: Check if a user account is locked",
        "POST /UserMgmt/IsUserLockedOutByPolicy: Check if a user is locked out by MFA policy",
        "POST /UserMgmt/SetCloudLock: Enable or disable a user account",
        "POST /CDirectoryService/ExemptUserFromMfa: Exempt a user from MFA for a specified time period",
        "POST /CDirectoryService/GetTechSupportUser: Retrieve the technical support user details",
        "POST /UserMgmt/GetUserRiskLevel: Get the current risk level for a specified user",
        "POST /CDirectoryService/StartAuthentication: Initiate user authentication and get available challenge mechanisms",
        "POST /CDirectoryService/SendIdentityVerification: Advance the authentication process by verifying user"
    ]
}