[
  {
    "category": "Basic endpoint recall",
    "question": "Which endpoint is used to delete an authentication profile?",
    "answer": "POST to /AuthProfile/DeleteProfile.",
    "difficulty": "easy"
  },
  {
    "category": "Basic endpoint recall",
    "question": "Which endpoint is used to set or update an authentication profile?",
    "answer": "POST to /AuthProfile/SaveProfile, which either creates a new profile or updates an existing one based on presence of UUID.",
    "difficulty": "medium"
  },
  {
    "category": "Basic endpoint recall",
    "question": "Which endpoint should you use to retrieve all policy links with RevStamp?",
    "answer": "POST to /Policy/GetNicePlinks. RevStamp is required for requesting policy links.",
    "difficulty": "hard"
  },
  {
    "category": "Request parameter identification",
    "question": "What query parameter is required to get password complexity requirements?",
    "answer": "`uuidOrName` is a required query parameter for /Policy/GetPasswordComplexityRequirements.",
    "difficulty": "easy"
  },
  {
    "category": "Request parameter identification",
    "question": "Which parameter must you provide when getting an authentication profile's MFA scoring?",
    "answer": "The `challenges` query parameter is required for /AuthProfile/GetProfileMFAScoring.",
    "difficulty": "medium"
  },
  {
    "category": "Request parameter identification",
    "question": "How would you call /AuthProfile/GetProfile, and what parameter must be in both query and body?",
    "answer": "You must provide `uuid` both as a query parameter and in the JSON body to POST to /AuthProfile/GetProfile.",
    "difficulty": "hard"
  },
  {
    "category": "Request body schema understanding",
    "question": "What field is required in the body to delete a policy block?",
    "answer": "`path` is required in the JSON body when calling /Policy/DeletePolicyBlock.",
    "difficulty": "easy"
  },
  {
    "category": "Request body schema understanding",
    "question": "What fields are required in the request body to save a policy block using /Policy/SavePolicyBlock3?",
    "answer": "Both `policy` and `plinks` must be present in the request body.",
    "difficulty": "medium"
  },
  {
    "category": "Request body schema understanding",
    "question": "What does the `policy` object in SavePolicyBlock3 contain?",
    "answer": "`Newpolicy`, `Version`, `Path`, `RevStamp`, and `Description` fields as per the schema.",
    "difficulty": "hard"
  },
  {
    "category": "Response schema comprehension",
    "question": "What field indicates success in AuthProfileDeleteProfile's response?",
    "answer": "`Result`, which is a boolean indicating success or failure.",
    "difficulty": "easy"
  },
  {
    "category": "Response schema comprehension",
    "question": "What does the result of GetPasswordComplexityRequirements contain?",
    "answer": "A string describing the password complexity requirements.",
    "difficulty": "medium"
  },
  {
    "category": "Response schema comprehension",
    "question": "What fields are included in the result of GetPolicyBlock?",
    "answer": "`RiskAnalysisLevels`, `AuthProfiles`, `PolicyModifiers`, `RevStamp`, and `RadiusClientList`.",
    "difficulty": "hard"
  },
  {
    "category": "Authentication/security requirements",
    "question": "What type of authentication is required for these endpoints?",
    "answer": "Bearer authentication with JWT tokens.",
    "difficulty": "easy"
  },
  {
    "category": "Authentication/security requirements",
    "question": "What happens if you omit the Authorization header?",
    "answer": "The request will fail because all endpoints require bearerAuth.",
    "difficulty": "medium"
  },
  {
    "category": "Authentication/security requirements",
    "question": "How does the security scheme enforce authorization for policy deletion?",
    "answer": "By requiring the client to include a valid JWT bearer token for /Policy/DeletePolicyBlock.",
    "difficulty": "hard"
  },
  {
    "category": "Conditional/branching logic",
    "question": "How does SaveProfile handle new vs existing profiles?",
    "answer": "If UUID is included, it updates; if missing, it creates a new profile.",
    "difficulty": "easy"
  },
  {
    "category": "Conditional/branching logic",
    "question": "When saving a policy block with SavePolicyBlock3, when is RevStamp required?",
    "answer": "RevStamp is required if `Newpolicy` is false to prevent change loss.",
    "difficulty": "medium"
  },
  {
    "category": "Conditional/branching logic",
    "question": "What would happen if you attempted to update a policy block without including RevStamp?",
    "answer": "The update would fail, because RevStamp is mandatory for updates to avoid overwriting concurrent changes.",
    "difficulty": "hard"
  },
  {
    "category": "Concurrency handling",
    "question": "What field helps avoid conflicts when editing policies?",
    "answer": "The `RevStamp` field.",
    "difficulty": "easy"
  },
  {
    "category": "Concurrency handling",
    "question": "Why does SavePolicyBlock3 include RevStamp?",
    "answer": "To help prevent change loss when multiple users edit the same policy.",
    "difficulty": "medium"
  },
  {
    "category": "Concurrency handling",
    "question": "How would you safely update a policy block with multiple editors?",
    "answer": "Get the current policy block with GetPolicyBlock to retrieve RevStamp, then include that RevStamp in SavePolicyBlock3 when updating.",
    "difficulty": "hard"
  },
  {
    "category": "Multi-step workflows",
    "question": "How do you confirm deletion of an authentication profile?",
    "answer": "Delete it with /AuthProfile/DeleteProfile, then attempt to get it with /AuthProfile/GetProfile.",
    "difficulty": "easy"
  },
  {
    "category": "Multi-step workflows",
    "question": "How would you update the challenges in an existing authentication profile?",
    "answer": "First get the profile with /AuthProfile/GetProfile, modify the challenges, then save it with /AuthProfile/SaveProfile.",
    "difficulty": "medium"
  },
  {
    "category": "Multi-step workflows",
    "question": "Describe a safe end-to-end policy editing flow.",
    "answer": "Get the current block with /Policy/GetPolicyBlock to get RevStamp, edit it, and save with /Policy/SavePolicyBlock3 including the RevStamp.",
    "difficulty": "hard"
  },
  {
    "category": "Error handling / failure scenarios",
    "question": "What might cause /Policy/DeletePolicyBlock to fail?",
    "answer": "Providing an invalid or missing `path` in the request body.",
    "difficulty": "easy"
  },
  {
    "category": "Error handling / failure scenarios",
    "question": "What field in responses indicates failure details?",
    "answer": "`Error`, which contains error message text if the call fails.",
    "difficulty": "medium"
  },
  {
    "category": "Error handling / failure scenarios",
    "question": "How does SavePolicyBlock3 prevent overwriting changes during concurrent edits?",
    "answer": "By requiring the RevStamp, so if you use an old one, the server can reject the update.",
    "difficulty": "hard"
  },
  {
    "category": "Cross-endpoint design understanding",
    "question": "Which endpoints are under the Policy Management tag?",
    "answer": "/Policy/DeletePolicyBlock, /Policy/GetNicePlinks, /Policy/GetPasswordComplexityRequirements, /Policy/GetPolicyBlock, /Policy/SavePolicyBlock3.",
    "difficulty": "easy"
  },
  {
    "category": "Cross-endpoint design understanding",
    "question": "What distinguishes AuthProfile endpoints from Policy Management endpoints?",
    "answer": "AuthProfile endpoints manage authentication profiles, while Policy Management endpoints manage policy blocks and related settings.",
    "difficulty": "medium"
  },
  {
    "category": "Cross-endpoint design understanding",
    "question": "How would you coordinate authentication profiles with policy blocks?",
    "answer": "By retrieving authentication profiles with /AuthProfile/GetProfile and including them as AuthProfiles when saving a policy block using /Policy/SavePolicyBlock3.",
    "difficulty": "hard"
  }
]
