{
  "openapi": "3.0.1",
  "x-stoplight": {
    "id": "mx3nwin7oda38"
  },
  "info": {
    "title": "Policy Management",
    "description": null,
    "termsOfService": "https://www.idaptive.com/eula/",
    "version": "22.7.201-a104ccbac3"
  },
  "servers": [
    {
      "url": "https://{tenant_url}/",
      "variables": {
        "tenant_url": {
          "default": "example.id.cyberark.cloud"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Policy Management",
      "description": "APIs related to managing policies"
    },
    {
      "name": "Authentication Profile",
      "description": "APIs related to managing authentication profiles"
    }
  ],
  "paths": {
    "/AuthProfile/DeleteProfile": {
      "post": {
        "tags": [
          "Authentication Profile"
        ],
        "summary": "Delete authentication profile",
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "Authentication UUID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "uuid"
                ],
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "The authentication profile uuid either passed in by method call or as part of the payload."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "API-Result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "..\\components\\schemas\\AuthProfileDeleteProfile.yaml"
                }
              }
            }
          }
        },
        "x-idap-anon": false,
        "x-codegen-request-body-name": "payload",
        "x-stoplight": {
          "id": "s3n5zlvpumh53"
        }
      }
    },
    "/AuthProfile/GetProfile": {
      "post": {
        "tags": [
          "Authentication Profile"
        ],
        "summary": "Get authentication profile",
        "description": "The profile get uses the uuid passed in by method call or as part of the payload.",
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "Profile UUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "uuid"
                ],
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string",
                    "description": "The authentication profile uuid either passed in by method call or as part of the payload."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "API-Result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "..\\components\\schemas\\AuthProfileGetProfile.yaml"
                }
              }
            }
          }
        },
        "x-idap-anon": false,
        "x-codegen-request-body-name": "payload",
        "x-stoplight": {
          "id": "ojhzovnv13918"
        }
      }
    },
    "/AuthProfile/SaveProfile": {
      "post": {
        "tags": [
          "Authentication Profile"
        ],
        "summary": "Set authentication profile",
        "description": "If the profile contains a UUID an update is performed, otherwise it's a write.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "settings"
                ],
                "type": "object",
                "properties": {
                  "settings": {
                    "type": "object",
                    "properties": {
                      "Challenges": {
                        "type": "array",
                        "description": "Selected authentication mechanisms.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "AdditionalData": {
                        "type": "object",
                        "properties": {},
                        "description": "DataEntity with additional data (default=null)."
                      },
                      "Uuid": {
                        "type": "string",
                        "description": "Profile UUID."
                      },
                      "SingleChallengeMechanisms": {
                        "type": "string",
                        "description": "Selected single authentication mechanisms."
                      },
                      "DurationInMinutes": {
                        "type": "integer",
                        "description": "How many minutes the profile is valid."
                      },
                      "Name": {
                        "type": "string",
                        "description": "Profile name."
                      }
                    },
                    "description": "The authentication profile."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "API-Result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "..\\components\\schemas\\AuthProfileSaveProfile.yaml"
                }
              }
            }
          }
        },
        "x-idap-anon": false,
        "x-codegen-request-body-name": "payload",
        "x-stoplight": {
          "id": "j2hchsuxi8z39"
        }
      }
    },
    "/Policy/DeletePolicyBlock": {
      "post": {
        "tags": [
          "Policy Management"
        ],
        "summary": "Delete policy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "path"
                ],
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The policy block to delete."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "API-Result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "..\\components\\schemas\\PolicyDeletePolicyBlock.yaml"
                }
              }
            }
          }
        },
        "x-idap-anon": false,
        "x-codegen-request-body-name": "payload",
        "x-stoplight": {
          "id": "0vqsyw65co1tx"
        }
      }
    },
    "/Policy/GetNicePlinks": {
      "post": {
        "tags": [
          "Policy Management"
        ],
        "summary": "Gets policy links.",
        "description": "RevStamp is required for both requesting and setting policy links.\n            Return is a dictionary(plink name, plink fields as below) with RevStamp as the last entry.",
        "responses": {
          "200": {
            "description": "API-Result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "..\\components\\schemas\\PolicyGetNicePlinks.yaml"
                }
              }
            }
          }
        },
        "x-idap-anon": false,
        "x-stoplight": {
          "id": "s772qyonp86t5"
        }
      }
    },
    "/Policy/GetPasswordComplexityRequirements": {
      "post": {
        "tags": [
          "Policy Management"
        ],
        "summary": "Get password complexity requirements",
        "parameters": [
          {
            "name": "uuidOrName",
            "in": "query",
            "description": "User's unique identifier or name to use when retrieving password complexity requirements.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API-Result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "..\\components\\schemas\\PolicyGetPasswordComplexityRequirements.yaml"
                }
              }
            }
          }
        },
        "x-idap-anon": false,
        "x-stoplight": {
          "id": "8acij0g9cripa"
        }
      }
    },
    "/AuthProfile/GetProfileMFAScoring": {
      "post": {
        "tags": [
          "Authentication Profile"
        ],
        "summary": "Gets authentication assurance level",
        "parameters": [
          {
            "name": "challenges",
            "in": "query",
            "description": "Profile factors",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API-Result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "..\\components\\schemas\\AuthProfileGetProfileMFAScoring.yaml"
                }
              }
            }
          }
        },
        "x-idap-anon": false,
        "x-stoplight": {
          "id": "8j5dfa3asi964"
        }
      }
    },
    "/Policy/GetPolicyBlock": {
      "post": {
        "tags": [
          "Policy Management"
        ],
        "summary": "Get policy block",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The policy block to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API-Result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "..\\components\\schemas\\PolicyGetPolicyBlock.yaml"
                }
              }
            }
          }
        },
        "x-idap-anon": false,
        "x-stoplight": {
          "id": "5g0a25tfc7z1x"
        }
      }
    },
    "/Policy/SavePolicyBlock3": {
      "post": {
        "tags": [
          "Policy Management"
        ],
        "summary": "Set policy",
        "description": "Replaces and deprecates SavePolicyBlock2, by adding the \"rev stamp\" functionality that helps \n            prevent change loss when policies are being edited by multiple users.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "plinks",
                  "policy"
                ],
                "type": "object",
                "properties": {
                  "policy": {
                    "type": "object",
                    "properties": {
                      "Newpolicy": {
                        "type": "boolean",
                        "description": "boolean set to true if this is a new policy (add)"
                      },
                      "Version": {
                        "type": "integer",
                        "description": "Policy structure version number.  1, at this time."
                      },
                      "Path": {
                        "type": "string",
                        "description": "path of the policy"
                      },
                      "RevStamp": {
                        "type": "string",
                        "description": "Revision stamp returned from latest call to getPolicyBlock.  This is required if Newpolicy is false."
                      },
                      "Description": {
                        "type": "string",
                        "description": "policy description"
                      }
                    },
                    "description": "JSON object containing the details of the policy being added or updated."
                  },
                  "plinks": {
                    "type": "array",
                    "description": "Array of plink objects representing the current plinks file.",
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "API-Result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "..\\components\\schemas\\PolicySavePolicyBlock3.yaml"
                }
              }
            }
          }
        },
        "x-idap-anon": false,
        "x-codegen-request-body-name": "payload",
        "x-stoplight": {
          "id": "cq4ogvddbfzgs"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}